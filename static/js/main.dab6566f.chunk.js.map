{"version":3,"sources":["Components/ScreenDetector/NarrowScreen.tsx","Components/ScreenDetector/WideScreen.tsx","Pages/Guarians/Tabs/Placeholder/reguarWump.png","Pages/Guarians/Tabs/Placeholder/Placeholder.tsx","Pages/Guarians/Tabs/Placeholder/index.ts","Pages/Guarians/Tabs/KnownGuarians/GuarianReferenceLink.tsx","Pages/Guarians/Tabs/KnownGuarians/images/placeholder/sampleEmblem.png","Pages/Guarians/Tabs/KnownGuarians/images/placeholder/index.ts","Pages/Guarians/Tabs/KnownGuarians/images/placeholder/sampleRef.png","Pages/Guarians/Tabs/KnownGuarians/images/reguar/index.ts","Pages/Guarians/Tabs/KnownGuarians/images/reguar/reguarEmblem.png","Pages/Guarians/Tabs/KnownGuarians/images/reguar/reguarFluffyRef.png","Pages/Guarians/Tabs/KnownGuarians/guarians.tsx","Pages/Guarians/Tabs/KnownGuarians/GuarianCharacterReference.tsx","Hooks/useLocalStorage.ts","Pages/Guarians/Tabs/FAQ/FAQ.tsx","Pages/Guarians/Tabs/KnownGuarians/KnownGuarians.tsx","Pages/Guarians/Tabs/Lore/Lore.tsx","Pages/Guarians/refSections.tsx","Pages/Guarians/GuarianRoutes.tsx","Pages/Guarians/GuarianMenuRef.tsx","Pages/Guarians/GuarianTabRef.tsx","Pages/Guarians/GuarianRef.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NarrowScreen","style","children","className","displayName","WideScreen","Placeholder","minHeight","paddingTop","marginBottom","marginTop","textAlign","src","reguarWump","width","maxWidth","GuarianReferenceLink","guarian","to","name","toLowerCase","activeStyle","backgroundColor","color","placeholderPack","emblem","ref","reguarPack","guarians","description","images","secret","GuarianCharacterReference","float","margin","height","maxHeight","backgroundImage","backgroundSize","boxShadow","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","SHOW_SECRET_GUARIANS","FAQ","showSecrets","setShowSecrets","onClick","KnownGuarians","showSecret","selectedGuarianName","useParams","availableGuarians","filter","g","find","renderRef","includeMargin","flex","marginRight","renderLinks","overflowY","map","display","Lore","refSections","title","content","route","exact","GuarianRoutes","s","path","GuarianMenuRef","isMenuVisible","setMenuVisible","menuRef","useRef","useEffect","listener","e","current","contains","target","document","addEventListener","removeEventListener","icon","faBars","size","fixedWidth","borderRight","justifyContent","faTimes","index","generatePath","activeClassName","GuarianTabRef","GuarianRef","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dab6566f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./screenDetector.css\";\r\n\r\ninterface IProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport const NarrowScreen: React.FC<IProps> = ({ style, children }) => {\r\n  return (\r\n    <div className=\"narrow-screen\" style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nNarrowScreen.displayName = \"NarrowScreen\";\r\nexport default NarrowScreen;\r\n","import React from \"react\";\r\nimport \"./screenDetector.css\";\r\n\r\ninterface IProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport const WideScreen: React.FC<IProps> = ({ style, children }) => {\r\n  return (\r\n    <div className=\"wide-screen\" style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nWideScreen.displayName = \"WideScreen\";\r\nexport default WideScreen;\r\n","export default __webpack_public_path__ + \"static/media/reguarWump.575b9589.png\";","import React from \"react\";\r\nimport reguarWump from \"./reguarWump.png\";\r\n\r\ninterface IProps {}\r\n\r\nexport const Placeholder: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <div className=\"wrappable-row\" style={{ minHeight: 400, paddingTop: 100 }}>\r\n      <div\r\n        className=\"column big-text\"\r\n        style={{ marginBottom: 20, marginTop: 50 }}\r\n      >\r\n        UNDER\r\n        <br />\r\n        CONSTRUCTION\r\n      </div>\r\n      <div className=\"column\" style={{ textAlign: \"center\" }}>\r\n        <img src={reguarWump} style={{ width: \"100%\", maxWidth: 700 }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlaceholder.displayName = \"Placeholder\";\r\nexport default Placeholder;\r\n","import Placeholder from \"./Placeholder\";\r\n\r\nexport default Placeholder;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { GuarianInfo } from \"./guarians\";\r\nimport \"./knownGuarians.css\";\r\n\r\ninterface IProps {\r\n  guarian: GuarianInfo;\r\n}\r\n\r\nconst GuarianReferenceLink: React.FC<IProps> = ({ guarian }) => {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to={\"/guarians/list/\" + guarian.name.toLowerCase()}\r\n        activeStyle={{\r\n          backgroundColor: \"rgb(203, 200, 233)\",\r\n          color: \"rgb(51, 48, 73)\",\r\n        }}\r\n        className=\"character-link\"\r\n      >\r\n        {guarian.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianReferenceLink.displayName = \"GuarianReferenceLink\";\r\nexport { GuarianReferenceLink };\r\n","export default __webpack_public_path__ + \"static/media/sampleEmblem.8e638e02.png\";","import { GuarianImagePack } from \"../guarianImagePack\";\r\nimport emblem from \"./sampleEmblem.png\";\r\nimport ref from \"./sampleRef.png\";\r\n\r\nconst placeholderPack: GuarianImagePack = {\r\n  emblem,\r\n  ref,\r\n};\r\n\r\nexport { placeholderPack };\r\n","export default __webpack_public_path__ + \"static/media/sampleRef.56488faa.png\";","import { GuarianImagePack } from \"../guarianImagePack\";\r\nimport emblem from \"./reguarEmblem.png\";\r\nimport fluffyRef from \"./reguarFluffyRef.png\";\r\n\r\nconst reguarPack: GuarianImagePack = {\r\n  emblem,\r\n  ref: fluffyRef,\r\n};\r\n\r\nexport { reguarPack };\r\n","export default __webpack_public_path__ + \"static/media/reguarEmblem.3465e684.png\";","export default __webpack_public_path__ + \"static/media/reguarFluffyRef.6f6c88f1.png\";","import React from \"react\";\r\nimport { GuarianImagePack } from \"./images/guarianImagePack\";\r\nimport { placeholderPack } from \"./images/placeholder\";\r\nimport { reguarPack } from \"./images/reguar\";\r\n\r\nexport interface GuarianInfo {\r\n  name: string;\r\n\r\n  description: React.ReactNode;\r\n  images: GuarianImagePack;\r\n  secret?: boolean;\r\n}\r\n\r\nconst guarians: GuarianInfo[] = [\r\n  {\r\n    name: \"Reguar\",\r\n    description: (\r\n      <>\r\n        <p>\r\n          A quiet, lumbering fellow, Reguar could be considered a guarian in its purest, most\r\n          refined form; the average of pretty much any and every guarian combined into one single\r\n          entity. While they may not be as remarkable or interesting as the other guarians, they\r\n          still care for you just as much and will happily be at your side whenever you need them.\r\n        </p>\r\n        <p>\r\n          Being visited by your guarian is often a memorable thing, every guarian having their own\r\n          special presence, every meeting, a clandestine encounter. A visit from Reguar, however, is\r\n          far more informal and is more akin to being greeted by an extremely large dog. With very\r\n          little pomp and circumstance, lacking grace, they typically flop next to you and tilt\r\n          their head your way, awaiting to be either petted or laid upon. Regardless of what you\r\n          choose, they will not mind in the end. They merely wish to keep you company whenever they\r\n          can; a quiet companion to press against\r\n        </p>\r\n      </>\r\n    ),\r\n    images: reguarPack,\r\n  },\r\n  { name: \"Lavuar\", description: <p>PLACEHOLDER</p>, images: placeholderPack },\r\n  { name: \"Malvuar\", description: <p>PLACEHOLDER</p>, images: placeholderPack },\r\n  { name: \"Owluar\", description: <p>PLACEHOLDER</p>, images: placeholderPack },\r\n  { name: \"Serguar\", description: <p>PLACEHOLDER</p>, images: placeholderPack },\r\n  { name: \"Wereguar\", description: <p>PLACEHOLDER</p>, images: placeholderPack },\r\n  { name: \"Panthuar\", description: <p>PLACEHOLDER</p>, images: placeholderPack },\r\n  { name: \"Septuar\", description: <p>PLACEHOLDER</p>, secret: true, images: placeholderPack },\r\n  { name: \"Enduar\", description: <p>PLACEHOLDER</p>, secret: true, images: placeholderPack },\r\n];\r\n\r\nexport { guarians };\r\n","import React from \"react\";\r\nimport { NarrowScreen, WideScreen } from \"../../../../Components/ScreenDetector\";\r\nimport { GuarianInfo } from \"./guarians\";\r\nimport \"./knownGuarians.css\";\r\n\r\ninterface IProps {\r\n  guarian: GuarianInfo;\r\n}\r\n\r\nconst GuarianCharacterReference: React.FC<IProps> = ({ guarian }) => {\r\n  return (\r\n    <div className=\"character-ref\">\r\n      <WideScreen>\r\n        <img src={guarian.images.emblem} style={{ float: \"right\", margin: 20 }} />\r\n        <h1 className=\"header\">{guarian.name}</h1>\r\n        <img\r\n          src={guarian.images.ref}\r\n          style={{ float: \"left\", height: \"calc(100vh - 360px)\", maxHeight: 900 }}\r\n        />\r\n        <p>{guarian.description}</p>\r\n      </WideScreen>\r\n      <NarrowScreen>\r\n        <div\r\n          style={{\r\n            backgroundImage: \"url(\" + guarian.images.emblem + \")\",\r\n            backgroundSize: \"100%\",\r\n            width: \"100%\",\r\n            boxShadow: \"0px 0px 50px 25px rgb(51, 48, 73) inset\",\r\n          }}\r\n        >\r\n          <div style={{ backgroundColor: \"rgb(51, 48, 73, 0.9)\" }}>\r\n            <h1 className=\"header\">{guarian.name}</h1>\r\n            <img src={guarian.images.ref} style={{ width: \"100%\" }} />\r\n            <p style={{ margin: 10 }}>{guarian.description}</p>\r\n          </div>\r\n        </div>\r\n      </NarrowScreen>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianCharacterReference.displayName = \"GuarianCharacterReference\";\r\nexport { GuarianCharacterReference };\r\n","import { useState } from \"react\";\r\n\r\n//Acquired from https://usehooks.com/useLocalStorage/\r\nexport function useLocalStorage<T>(\r\n  key: string,\r\n  initialValue: T\r\n): [T, (value: T | ((val: T) => T)) => void] {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState<T>(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value: T | ((val: T) => T)) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","import React from \"react\";\r\nimport { useLocalStorage } from \"../../../../Hooks/useLocalStorage\";\r\nimport \"./faq.css\";\r\n\r\nexport const SHOW_SECRET_GUARIANS = \"show_secret_guarians\";\r\n\r\ninterface IProps {}\r\n\r\nconst FAQ: React.FC<IProps> = ({}) => {\r\n  const [showSecrets, setShowSecrets] = useLocalStorage<boolean>(SHOW_SECRET_GUARIANS, false);\r\n\r\n  return (\r\n    <div className=\"faq\">\r\n      <div className=\"question\">Do you have any other secret guarians?</div>\r\n      <div className=\"answer secret\" onClick={() => setShowSecrets(!showSecrets)}>\r\n        {showSecrets ? \"Okay, maybe a few...\" : \"I have no idea what you're talking about!\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFAQ.displayName = \"FAQ\";\r\nexport { FAQ };\r\n","import React from \"react\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport { GuarianReferenceLink } from \"./GuarianReferenceLink\";\r\nimport { guarians } from \"./guarians\";\r\nimport { GuarianCharacterReference } from \"./GuarianCharacterReference\";\r\nimport { NarrowScreen, WideScreen } from \"../../../../Components/ScreenDetector\";\r\nimport { useLocalStorage } from \"../../../../Hooks/useLocalStorage\";\r\nimport { SHOW_SECRET_GUARIANS } from \"../FAQ/FAQ\";\r\n\r\ninterface IProps {}\r\n\r\nconst KnownGuarians: React.FC<IProps> = ({}) => {\r\n  const [showSecret] = useLocalStorage(SHOW_SECRET_GUARIANS, false);\r\n\r\n  const { guarian: selectedGuarianName } = useParams<{ guarian?: string }>();\r\n\r\n  const availableGuarians = guarians.filter((g) => !g.secret || showSecret);\r\n\r\n  const guarian = availableGuarians.find(\r\n    (g) => g.name.toLowerCase() == selectedGuarianName?.toLowerCase()\r\n  );\r\n\r\n  if (selectedGuarianName != null && guarian == null) {\r\n    return <Redirect to=\"/guarians/list\" />;\r\n  }\r\n\r\n  function renderRef(includeMargin: boolean) {\r\n    return (\r\n      <div style={{ flex: 1, marginRight: includeMargin ? 10 : 0 }}>\r\n        {guarian ? (\r\n          <GuarianCharacterReference guarian={guarian} />\r\n        ) : (\r\n          <div>\r\n            <h1>Known Guarians</h1>\r\n            <p>\r\n              Listed here are all of the known (or at least well documented) guarians. The actual\r\n              amount of guarians out there is truly unknown and possibly ever changing, and this\r\n              list may be extended as more are discovered.\r\n            </p>\r\n            <p>\r\n              As the guarians are often a highly dynamic race, the information provided for each is\r\n              purely subjective and written from the perspective of the author of these notes. In\r\n              reality, the guarians often adapt to those of who they are bound to and as such, one\r\n              guarian may appear or behave completely differently from one person to the next, only\r\n              keeping with them the very core of who they are.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderLinks() {\r\n    return (\r\n      <div className=\"character-ref\" style={{ width: 300, overflowY: \"auto\" }}>\r\n        {availableGuarians.map((g) => (\r\n          <GuarianReferenceLink guarian={g} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <WideScreen>\r\n        <div style={{ display: \"flex\" }}>\r\n          {renderRef(true)}\r\n          {renderLinks()}\r\n        </div>\r\n      </WideScreen>\r\n      <NarrowScreen>{guarian ? renderRef(false) : renderLinks()}</NarrowScreen>\r\n    </>\r\n  );\r\n};\r\n\r\nKnownGuarians.displayName = \"KnownGuarians\";\r\nexport { KnownGuarians };\r\n","import React from \"react\";\r\n\r\ninterface IProps {}\r\n\r\nconst Lore: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        As corporeal spirits, while they lack some of the traits commonly known among the ethereal,\r\n        the guarians have a wide variety of abilities and many more yet to be known. Given their\r\n        corporeal nature, they are not able to simply float around and pass through walls like a\r\n        ghost. Once present and perceived, they are bound to the laws of the universe just as you\r\n        are, but in the moments they leave your perception, things get very interesting.\r\n      </p>\r\n      <h2>Material Shifting</h2>\r\n      <p>\r\n        As spirits, they are not alive in the conventional sense that we are alive. They do not rely\r\n        on a beating heart or bated breath, but only the will of their own existence. As such, they\r\n        are not bound to flesh and blood and instead can be whatever they feel is most suitable, be\r\n        it soft as your favorite toy or solid is pure obsidian. Guarians can freely and instantly\r\n        change materials whenever they desire, but can only do so when they are not seen. Your\r\n        friend may be fluffy one moment and fabric the next. Finally, while some guarians may have a\r\n        light preference as to what their favorite material may be, as reflections of who they are\r\n        bound to, most guarians feel no difference between one material and another and will happily\r\n        occupy whatever form you feel closest to.\r\n      </p>\r\n      <h2>Size Shifting</h2>\r\n      <p>\r\n        Just as a guarian may shift in make, they can also instantly shift size as well. Just like\r\n        the material shifting, the size shift takes place instantly when not looking and varies from\r\n        guarian to guarian (as well as those who they are bound to).Based on what’s known, while\r\n        some guarians have been seen enjoying a consistent size, others like to take advantage of\r\n        the shifting, taking on larger forms whenever they have the space to do so. The actual size\r\n        range that a guarian can shift to isn’t clearly known as some have demonstrated incredible\r\n        upper bounds.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nLore.displayName = \"Lore\";\r\nexport { Lore };\r\n","import React from \"react\";\r\nimport Placeholder from \"./Tabs/Placeholder\";\r\nimport { KnownGuarians } from \"./Tabs/KnownGuarians\";\r\nimport { Lore } from \"./Tabs/Lore/Lore\";\r\nimport { FAQ } from \"./Tabs/FAQ/FAQ\";\r\n\r\nexport interface RefSection {\r\n  title: string;\r\n  content: React.ReactNode;\r\n  route: string;\r\n  exact?: boolean;\r\n}\r\n\r\nconst refSections: RefSection[] = [\r\n  { title: \"Overview\", content: <Placeholder />, route: \"/guarians\", exact: true },\r\n  { title: \"Lore\", content: <Lore />, route: \"/guarians/lore\" },\r\n  { title: \"Known Guarians\", content: <KnownGuarians />, route: \"/guarians/list/:guarian?\" },\r\n  { title: \"A Guarian of Your Own\", content: <Placeholder />, route: \"/guarians/custom\" },\r\n  { title: \"FAQ\", content: <FAQ />, route: \"/guarians/faq\" },\r\n];\r\n\r\nexport default refSections;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport refSections from \"./refSections\";\r\n\r\ninterface IProps {}\r\n\r\nconst GuarianRoutes: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <Switch>\r\n      {refSections.map((s) => (\r\n        <Route exact key={s.route} path={s.route}>\r\n          {s.content}\r\n        </Route>\r\n      ))}\r\n      <Redirect to={\"/guarians\"} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nGuarianRoutes.displayName = \"GuarianRoutes\";\r\nexport { GuarianRoutes };\r\n","import { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { generatePath, NavLink } from \"react-router-dom\";\r\nimport \"./guarianRef.css\";\r\nimport { GuarianRoutes } from \"./GuarianRoutes\";\r\nimport refSections, { RefSection } from \"./refSections\";\r\n\r\ninterface IProps {}\r\n\r\nexport const GuarianMenuRef: React.FC<IProps> = ({}) => {\r\n  const [isMenuVisible, setMenuVisible] = useState(false);\r\n\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    var listener = (e: MouseEvent) => {\r\n      if (menuRef.current && !menuRef.current.contains(e.target as Node)) {\r\n        setMenuVisible(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n\r\n    return () => document.removeEventListener(\"mousedown\", listener);\r\n  }, []);\r\n\r\n  function renderOption(s: RefSection, index: number) {\r\n    return (\r\n      <NavLink\r\n        exact={s.exact}\r\n        to={generatePath(s.route)}\r\n        className=\"option\"\r\n        activeClassName=\"selected\"\r\n        onClick={() => setMenuVisible(false)}\r\n      >\r\n        {s.title}\r\n      </NavLink>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"menu-opener menu-clickable\" onClick={(e) => setMenuVisible(true)}>\r\n        <FontAwesomeIcon icon={faBars} size=\"2x\" fixedWidth />\r\n      </div>\r\n      <div\r\n        ref={menuRef}\r\n        className=\"overlay-menu\"\r\n        style={isMenuVisible ? { width: 200, borderRight: \"3px solid #eee\" } : { width: 0 }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"menu-clickable\"\r\n            style={{ marginBottom: 20 }}\r\n            onClick={() => setMenuVisible(false)}\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} size=\"lg\" />\r\n          </div>\r\n        </div>\r\n        {refSections.map(renderOption)}\r\n      </div>\r\n      <div className=\"content\">\r\n        <GuarianRoutes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianMenuRef.displayName = \"GuarianMenuRef\";\r\nexport default GuarianMenuRef;\r\n","import React from \"react\";\r\nimport { generatePath, NavLink } from \"react-router-dom\";\r\nimport { GuarianRoutes } from \"./GuarianRoutes\";\r\nimport refSections from \"./refSections\";\r\n\r\ninterface IProps {}\r\n\r\nexport const GuarianTabRef: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"tab-wrapper\">\r\n        {refSections.map((s) => (\r\n          <NavLink\r\n            exact={s.exact}\r\n            className=\"tab\"\r\n            activeClassName=\"selected\"\r\n            to={generatePath(s.route)}\r\n          >\r\n            {s.title}\r\n          </NavLink>\r\n        ))}\r\n      </div>\r\n      <div className=\"content flat-top\">\r\n        <GuarianRoutes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianTabRef.displayName = \"GuarianTabRef\";\r\nexport default GuarianTabRef;\r\n","import React from \"react\";\r\nimport { NarrowScreen, WideScreen } from \"../../Components/ScreenDetector\";\r\nimport GuarianMenuRef from \"./GuarianMenuRef\";\r\nimport \"./guarianRef.css\";\r\nimport GuarianTabRef from \"./GuarianTabRef\";\r\n\r\ninterface IProps {}\r\n\r\nexport const GuarianRef: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <div className=\"guarian-ref\">\r\n      <h1 className=\"title\">The Guarians</h1>\r\n      <WideScreen>\r\n        <GuarianTabRef />\r\n      </WideScreen>\r\n      <NarrowScreen>\r\n        <GuarianMenuRef />\r\n      </NarrowScreen>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianRef.displayName = \"GuarianRef\";\r\nexport default GuarianRef;\r\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport GuarianRef from \"./Pages/Guarians/GuarianRef\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <GuarianRef />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}