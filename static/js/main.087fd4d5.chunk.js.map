{"version":3,"sources":["Components/ScreenDetector/NarrowScreen.tsx","Components/ScreenDetector/WideScreen.tsx","Pages/Guarians/Tabs/Placeholder/reguarWump.png","Pages/Guarians/Tabs/Placeholder/Placeholder.tsx","Pages/Guarians/Tabs/Placeholder/index.ts","Pages/Guarians/Tabs/Powers/Powers.tsx","Pages/Guarians/refSections.tsx","Pages/Guarians/GuarianMenuRef.tsx","Pages/Guarians/GuarianTabRef.tsx","Pages/Guarians/GuarianRef.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NarrowScreen","style","children","className","displayName","WideScreen","Placeholder","minHeight","paddingTop","marginBottom","marginTop","textAlign","src","reguarWump","width","maxWidth","Powers","refSections","title","content","GuarianMenuRef","selectedIndex","onSelect","useState","isMenuVisible","setMenuVisible","menuRef","useRef","useEffect","listener","e","current","contains","target","document","addEventListener","removeEventListener","onClick","icon","faBars","size","fixedWidth","ref","display","justifyContent","faTimes","map","s","index","GuarianTabRef","GuarianRef","setIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.087fd4d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./screenDetector.css\";\r\n\r\ninterface IProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport const NarrowScreen: React.FC<IProps> = ({ style, children }) => {\r\n  return (\r\n    <div className=\"narrow-screen\" style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nNarrowScreen.displayName = \"NarrowScreen\";\r\nexport default NarrowScreen;\r\n","import React from \"react\";\r\nimport \"./screenDetector.css\";\r\n\r\ninterface IProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport const WideScreen: React.FC<IProps> = ({ style, children }) => {\r\n  return (\r\n    <div className=\"wide-screen\" style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nWideScreen.displayName = \"WideScreen\";\r\nexport default WideScreen;\r\n","export default __webpack_public_path__ + \"static/media/reguarWump.575b9589.png\";","import React from \"react\";\r\nimport reguarWump from \"./reguarWump.png\";\r\n\r\ninterface IProps {}\r\n\r\nexport const Placeholder: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <div className=\"wrappable-row\" style={{ minHeight: 400, paddingTop: 100 }}>\r\n      <div\r\n        className=\"column big-text\"\r\n        style={{ marginBottom: 20, marginTop: 50 }}\r\n      >\r\n        UNDER\r\n        <br />\r\n        CONSTRUCTION\r\n      </div>\r\n      <div className=\"column\" style={{ textAlign: \"center\" }}>\r\n        <img src={reguarWump} style={{ width: \"100%\", maxWidth: 700 }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlaceholder.displayName = \"Placeholder\";\r\nexport default Placeholder;\r\n","import Placeholder from \"./Placeholder\";\r\n\r\nexport default Placeholder;\r\n","import { faCircle, faCube, faSmile } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\ninterface IProps {}\r\n\r\nexport const Powers: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        As corporeal spirits, while they lack some of the traits commonly known\r\n        among the ethereal, the guarians have a wide variety of abilities and\r\n        many more yet to be known. Given their corporeal nature, they are not\r\n        able to simply float around and pass through walls like a ghost. Once\r\n        present and perceived, they are bound to the laws of the universe just\r\n        as you are, but in the moments they leave your perception, things get\r\n        very interesting.\r\n      </p>\r\n      <h1>Material Shifting</h1>\r\n      <p>\r\n        As spirits, they are not alive in the conventional sense that we are\r\n        alive. They do not rely on a beating heart or bated breath, but only the\r\n        will of their own existence. As such, they are not bound to flesh and\r\n        blood and instead can be whatever they feel is most suitable, be it soft\r\n        as your favorite toy or solid is pure obsidian. Guarians can freely and\r\n        instantly change materials whenever they desire, but can only do so when\r\n        they are not seen. Your friend may be fluffy one moment and fabric the\r\n        next. Finally, while some guarians may have a light preference as to\r\n        what their favorite material may be, as reflections of who they are\r\n        bound to, most guarians feel no difference between one material and\r\n        another and will happily occupy whatever form you feel closest to.\r\n      </p>\r\n      <h1>Size Shifting</h1>\r\n      <p>\r\n        Just as a guarian may shift in make, they can also instantly shift size\r\n        as well. Just like the material shifting, the size shift takes place\r\n        instantly when not looking and varies from guarian to guarian (as well\r\n        as those who they are bound to).Based on what’s known, while some\r\n        guarians have been seen enjoying a consistent size, others like to take\r\n        advantage of the shifting, taking on larger forms whenever they have the\r\n        space to do so. The actual size range that a guarian can shift to isn’t\r\n        clearly known as some have demonstrated incredible upper bounds.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nPowers.displayName = \"Powers\";\r\nexport default Powers;\r\n","import React from \"react\";\r\nimport Placeholder from \"./Tabs/Placeholder\";\r\nimport { Powers } from \"./Tabs/Powers\";\r\n\r\nexport interface RefSection {\r\n  title: string;\r\n  content: React.ReactNode;\r\n}\r\n\r\nconst refSections: RefSection[] = [\r\n  { title: \"Overview\", content: <Placeholder /> },\r\n  { title: \"Powers\", content: <Powers /> },\r\n  { title: \"Adornment\", content: <Placeholder /> },\r\n  { title: \"Perception\", content: <Placeholder /> },\r\n  { title: \"Known Guarians\", content: <Placeholder /> },\r\n  { title: \"A Guarian of Your Own\", content: <Placeholder /> },\r\n];\r\n\r\nexport default refSections;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Placeholder from \"./Tabs/Placeholder\";\r\nimport \"./guarianRef.css\";\r\nimport refSections, { RefSection } from \"./refSections\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface IProps {\r\n  selectedIndex: number;\r\n  onSelect(index: number): void;\r\n}\r\n\r\nexport const GuarianMenuRef: React.FC<IProps> = ({\r\n  selectedIndex,\r\n  onSelect,\r\n}) => {\r\n  const [isMenuVisible, setMenuVisible] = useState(false);\r\n\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    var listener = (e: MouseEvent) => {\r\n      if (menuRef.current && !menuRef.current.contains(e.target as Node)) {\r\n        setMenuVisible(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n\r\n    return () => document.removeEventListener(\"mousedown\", listener);\r\n  }, []);\r\n\r\n  function renderOption(s: RefSection, index: number) {\r\n    return (\r\n      <div\r\n        key={index}\r\n        className={\"option\" + (index == selectedIndex ? \" selected\" : \"\")}\r\n        onClick={() => {\r\n          onSelect(index);\r\n          setMenuVisible(false);\r\n        }}\r\n      >\r\n        {s.title}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"menu-opener menu-clickable\"\r\n        onClick={(e) => setMenuVisible(true)}\r\n      >\r\n        <FontAwesomeIcon icon={faBars} size=\"2x\" fixedWidth />\r\n      </div>\r\n      <div\r\n        ref={menuRef}\r\n        className=\"overlay-menu\"\r\n        style={{ width: isMenuVisible ? 200 : 0 }}\r\n      >\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <div\r\n            className=\"menu-clickable\"\r\n            style={{ marginBottom: 20 }}\r\n            onClick={() => setMenuVisible(false)}\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} size=\"lg\" />\r\n          </div>\r\n        </div>\r\n        {refSections.map(renderOption)}\r\n      </div>\r\n      <div className=\"content\">{refSections[selectedIndex].content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianMenuRef.displayName = \"GuarianMenuRef\";\r\nexport default GuarianMenuRef;\r\n","import React from \"react\";\r\nimport { Tabs, TabList, Tab, TabPanel } from \"react-tabs\";\r\nimport refSections from \"./refSections\";\r\nimport Placeholder from \"./Tabs/Placeholder\";\r\n\r\ninterface IProps {\r\n  selectedIndex: number;\r\n  onSelect(index: number): void;\r\n}\r\n\r\nexport const GuarianTabRef: React.FC<IProps> = ({\r\n  selectedIndex,\r\n  onSelect,\r\n}) => {\r\n  return (\r\n    <Tabs selectedIndex={selectedIndex} onSelect={onSelect}>\r\n      <TabList>\r\n        {refSections.map((s, index) => (\r\n          <Tab key={index}>{s.title}</Tab>\r\n        ))}\r\n      </TabList>\r\n      {refSections.map((s, index) => (\r\n        <TabPanel key={index}>{s.content}</TabPanel>\r\n      ))}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nGuarianTabRef.displayName = \"GuarianTabRef\";\r\nexport default GuarianTabRef;\r\n","import React, { useState } from \"react\";\r\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\r\nimport { NarrowScreen, WideScreen } from \"../../Components/ScreenDetector\";\r\nimport GuarianMenuRef from \"./GuarianMenuRef\";\r\nimport \"./guarianRef.css\";\r\nimport GuarianTabRef from \"./GuarianTabRef\";\r\nimport Placeholder from \"./Tabs/Placeholder\";\r\n\r\ninterface IProps {}\r\n\r\nexport const GuarianRef: React.FC<IProps> = ({}) => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  return (\r\n    <div className=\"guarian-ref\">\r\n      <h1 className=\"title\">The Guarians</h1>\r\n      <WideScreen>\r\n        <GuarianTabRef selectedIndex={index} onSelect={setIndex} />\r\n      </WideScreen>\r\n      <NarrowScreen>\r\n        <GuarianMenuRef selectedIndex={index} onSelect={setIndex} />\r\n      </NarrowScreen>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianRef.displayName = \"GuarianRef\";\r\nexport default GuarianRef;\r\n","import React from \"react\";\nimport GuarianRef from \"./Pages/Guarians/GuarianRef\";\n\nfunction App() {\n  return <GuarianRef />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}