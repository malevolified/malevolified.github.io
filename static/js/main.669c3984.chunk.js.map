{"version":3,"sources":["Components/ScreenDetector/NarrowScreen.tsx","Components/ScreenDetector/WideScreen.tsx","Pages/Guarians/Tabs/Placeholder/reguarWump.png","Pages/Guarians/Tabs/Placeholder/Placeholder.tsx","Pages/Guarians/Tabs/Placeholder/index.ts","Pages/Guarians/Tabs/KnownGuarians/GuarianReferenceLink.tsx","Pages/Guarians/Tabs/KnownGuarians/images/reguar/reguarEmblem.png","Pages/Guarians/Tabs/KnownGuarians/images/placeholder/sampleEmblem.png","Pages/Guarians/Tabs/KnownGuarians/images/placeholder/sampleRef.png","Pages/Guarians/Tabs/KnownGuarians/guarians.tsx","Pages/Guarians/Tabs/KnownGuarians/GuarianCharacterReference.tsx","Pages/Guarians/Tabs/KnownGuarians/KnownGuarians.tsx","Pages/Guarians/Tabs/Lore/Lore.tsx","Pages/Guarians/refSections.tsx","Pages/Guarians/GuarianRoutes.tsx","Pages/Guarians/GuarianMenuRef.tsx","Pages/Guarians/GuarianTabRef.tsx","Pages/Guarians/GuarianRef.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NarrowScreen","style","children","className","displayName","WideScreen","Placeholder","minHeight","paddingTop","marginBottom","marginTop","textAlign","src","reguarWump","width","maxWidth","GuarianReferenceLink","guarian","to","name","toLowerCase","activeStyle","backgroundColor","color","guarians","description","emblem","reguarEmblem","refImage","placeholderRef","placeholderEmblem","secret","GuarianCharacterReference","float","margin","height","maxHeight","backgroundImage","backgroundSize","boxShadow","KnownGuarians","selectedGuarianName","useParams","availableGuarians","filter","g","find","renderRef","includeMargin","flex","marginRight","renderLinks","overflowY","map","display","Lore","refSections","title","content","route","exact","GuarianRoutes","s","path","GuarianMenuRef","useState","isMenuVisible","setMenuVisible","menuRef","useRef","useEffect","listener","e","current","contains","target","document","addEventListener","removeEventListener","onClick","icon","faBars","size","fixedWidth","ref","borderRight","justifyContent","faTimes","index","generatePath","activeClassName","GuarianTabRef","GuarianRef","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.669c3984.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./screenDetector.css\";\r\n\r\ninterface IProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport const NarrowScreen: React.FC<IProps> = ({ style, children }) => {\r\n  return (\r\n    <div className=\"narrow-screen\" style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nNarrowScreen.displayName = \"NarrowScreen\";\r\nexport default NarrowScreen;\r\n","import React from \"react\";\r\nimport \"./screenDetector.css\";\r\n\r\ninterface IProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport const WideScreen: React.FC<IProps> = ({ style, children }) => {\r\n  return (\r\n    <div className=\"wide-screen\" style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nWideScreen.displayName = \"WideScreen\";\r\nexport default WideScreen;\r\n","export default __webpack_public_path__ + \"static/media/reguarWump.575b9589.png\";","import React from \"react\";\r\nimport reguarWump from \"./reguarWump.png\";\r\n\r\ninterface IProps {}\r\n\r\nexport const Placeholder: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <div className=\"wrappable-row\" style={{ minHeight: 400, paddingTop: 100 }}>\r\n      <div\r\n        className=\"column big-text\"\r\n        style={{ marginBottom: 20, marginTop: 50 }}\r\n      >\r\n        UNDER\r\n        <br />\r\n        CONSTRUCTION\r\n      </div>\r\n      <div className=\"column\" style={{ textAlign: \"center\" }}>\r\n        <img src={reguarWump} style={{ width: \"100%\", maxWidth: 700 }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlaceholder.displayName = \"Placeholder\";\r\nexport default Placeholder;\r\n","import Placeholder from \"./Placeholder\";\r\n\r\nexport default Placeholder;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { GuarianInfo } from \"./guarians\";\r\nimport \"./knownGuarians.css\";\r\n\r\ninterface IProps {\r\n  guarian: GuarianInfo;\r\n}\r\n\r\nconst GuarianReferenceLink: React.FC<IProps> = ({ guarian }) => {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to={\"/guarians/list/\" + guarian.name.toLowerCase()}\r\n        activeStyle={{\r\n          backgroundColor: \"rgb(203, 200, 233)\",\r\n          color: \"rgb(51, 48, 73)\",\r\n        }}\r\n        className=\"character-link\"\r\n      >\r\n        {guarian.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianReferenceLink.displayName = \"GuarianReferenceLink\";\r\nexport { GuarianReferenceLink };\r\n","export default __webpack_public_path__ + \"static/media/reguarEmblem.3465e684.png\";","export default __webpack_public_path__ + \"static/media/sampleEmblem.8e638e02.png\";","export default __webpack_public_path__ + \"static/media/sampleRef.56488faa.png\";","import React from \"react\";\r\nimport reguarEmblem from \"./images/reguar/reguarEmblem.png\";\r\nimport placeholderEmblem from \"./images/placeholder/sampleEmblem.png\";\r\nimport placeholderRef from \"./images/placeholder/sampleRef.png\";\r\n\r\nexport interface GuarianInfo {\r\n  name: string;\r\n  description: React.ReactNode;\r\n  emblem: string;\r\n  refImage: string;\r\n  secret?: boolean;\r\n}\r\n\r\nconst guarians: GuarianInfo[] = [\r\n  {\r\n    name: \"Reguar\",\r\n    description: (\r\n      <p>\r\n        Perhaps the most unremarkable of the guarians, while they may not be as exciting as the\r\n        others, they care for you all the same.\r\n      </p>\r\n    ),\r\n    emblem: reguarEmblem,\r\n    refImage: placeholderRef,\r\n  },\r\n  {\r\n    name: \"Lavuar\",\r\n    description: <p>PLACEHOLDER</p>,\r\n    emblem: placeholderEmblem,\r\n    refImage: placeholderRef,\r\n  },\r\n  {\r\n    name: \"Malvuar\",\r\n    description: <p>PLACEHOLDER</p>,\r\n    emblem: placeholderEmblem,\r\n    refImage: placeholderRef,\r\n  },\r\n  {\r\n    name: \"Owluar\",\r\n    description: <p>PLACEHOLDER</p>,\r\n    emblem: placeholderEmblem,\r\n    refImage: placeholderRef,\r\n  },\r\n  {\r\n    name: \"Serguar\",\r\n    description: <p>PLACEHOLDER</p>,\r\n    emblem: placeholderEmblem,\r\n    refImage: placeholderRef,\r\n  },\r\n  {\r\n    name: \"Wereguar\",\r\n    description: <p>PLACEHOLDER</p>,\r\n    emblem: placeholderEmblem,\r\n    refImage: placeholderRef,\r\n  },\r\n  {\r\n    name: \"Panthuar\",\r\n    description: <p>PLACEHOLDER</p>,\r\n    emblem: placeholderEmblem,\r\n    refImage: placeholderRef,\r\n  },\r\n  {\r\n    name: \"Septuar\",\r\n    description: <p>PLACEHOLDER</p>,\r\n    secret: true,\r\n    emblem: placeholderEmblem,\r\n    refImage: placeholderRef,\r\n  },\r\n  {\r\n    name: \"Enduar\",\r\n    description: <p>PLACEHOLDER</p>,\r\n    secret: true,\r\n    emblem: placeholderEmblem,\r\n    refImage: placeholderRef,\r\n  },\r\n];\r\n\r\nexport { guarians };\r\n","import React from \"react\";\r\nimport { NarrowScreen, WideScreen } from \"../../../../Components/ScreenDetector\";\r\nimport { GuarianInfo } from \"./guarians\";\r\nimport \"./knownGuarians.css\";\r\n\r\ninterface IProps {\r\n  guarian: GuarianInfo;\r\n}\r\n\r\nconst GuarianCharacterReference: React.FC<IProps> = ({ guarian }) => {\r\n  return (\r\n    <div className=\"character-ref\">\r\n      <WideScreen>\r\n        <img src={guarian.emblem} style={{ float: \"right\", margin: 20 }} />\r\n        <h1 className=\"header\">{guarian.name}</h1>\r\n        <img\r\n          src={guarian.refImage}\r\n          style={{ float: \"left\", height: \"calc(100vh - 360px)\", maxHeight: 900 }}\r\n        />\r\n        <p>{guarian.description}</p>\r\n      </WideScreen>\r\n      <NarrowScreen>\r\n        <div\r\n          style={{\r\n            backgroundImage: \"url(\" + guarian.emblem + \")\",\r\n            backgroundSize: \"100%\",\r\n            width: \"100%\",\r\n            boxShadow: \"0px 0px 50px 25px rgb(51, 48, 73) inset\",\r\n          }}\r\n        >\r\n          <div style={{ backgroundColor: \"rgb(51, 48, 73, 0.9)\" }}>\r\n            <h1 className=\"header\">{guarian.name}</h1>\r\n            <img src={guarian.refImage} style={{ width: \"100%\" }} />\r\n            <p style={{ margin: 10 }}>{guarian.description}</p>\r\n          </div>\r\n        </div>\r\n      </NarrowScreen>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianCharacterReference.displayName = \"GuarianCharacterReference\";\r\nexport { GuarianCharacterReference };\r\n","import React from \"react\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport { GuarianReferenceLink } from \"./GuarianReferenceLink\";\r\nimport { guarians } from \"./guarians\";\r\nimport { GuarianCharacterReference } from \"./GuarianCharacterReference\";\r\nimport { NarrowScreen, WideScreen } from \"../../../../Components/ScreenDetector\";\r\n\r\ninterface IProps {}\r\n\r\nconst KnownGuarians: React.FC<IProps> = ({}) => {\r\n  const { guarian: selectedGuarianName } = useParams<{ guarian?: string }>();\r\n\r\n  const availableGuarians = guarians.filter((g) => !g.secret);\r\n\r\n  const guarian = availableGuarians.find(\r\n    (g) => g.name.toLowerCase() == selectedGuarianName?.toLowerCase()\r\n  );\r\n\r\n  if (selectedGuarianName != null && guarian == null) {\r\n    return <Redirect to=\"/guarians/list\" />;\r\n  }\r\n\r\n  function renderRef(includeMargin: boolean) {\r\n    return (\r\n      <div style={{ flex: 1, marginRight: includeMargin ? 10 : 0 }}>\r\n        {guarian ? (\r\n          <GuarianCharacterReference guarian={guarian} />\r\n        ) : (\r\n          <div>\r\n            <h1>Known Guarians</h1>\r\n            <p>\r\n              Listed here are all of the known (or at least well documented) guarians. The actual\r\n              amount of guarians out there is truly unknown and possibly ever changing, and this\r\n              list may be extended as more are discovered.\r\n            </p>\r\n            <p>\r\n              As the guarians are often a highly dynamic race, the information provided for each is\r\n              purely subjective and written from the perspective of the author of these notes. In\r\n              reality, the guarians often adapt to those of who they are bound to and as such, one\r\n              guarian may appear or behave completely differently from one person to the next, only\r\n              keeping with them the very core of who they are.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderLinks() {\r\n    return (\r\n      <div className=\"character-ref\" style={{ width: 300, overflowY: \"auto\" }}>\r\n        {availableGuarians.map((g) => (\r\n          <GuarianReferenceLink guarian={g} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <WideScreen>\r\n        <div style={{ display: \"flex\" }}>\r\n          {renderRef(true)}\r\n          {renderLinks()}\r\n        </div>\r\n      </WideScreen>\r\n      <NarrowScreen>{guarian ? renderRef(false) : renderLinks()}</NarrowScreen>\r\n    </>\r\n  );\r\n};\r\n\r\nKnownGuarians.displayName = \"KnownGuarians\";\r\nexport { KnownGuarians };\r\n","import React from \"react\";\r\n\r\ninterface IProps {}\r\n\r\nconst Lore: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        As corporeal spirits, while they lack some of the traits commonly known among the ethereal,\r\n        the guarians have a wide variety of abilities and many more yet to be known. Given their\r\n        corporeal nature, they are not able to simply float around and pass through walls like a\r\n        ghost. Once present and perceived, they are bound to the laws of the universe just as you\r\n        are, but in the moments they leave your perception, things get very interesting.\r\n      </p>\r\n      <h2>Material Shifting</h2>\r\n      <p>\r\n        As spirits, they are not alive in the conventional sense that we are alive. They do not rely\r\n        on a beating heart or bated breath, but only the will of their own existence. As such, they\r\n        are not bound to flesh and blood and instead can be whatever they feel is most suitable, be\r\n        it soft as your favorite toy or solid is pure obsidian. Guarians can freely and instantly\r\n        change materials whenever they desire, but can only do so when they are not seen. Your\r\n        friend may be fluffy one moment and fabric the next. Finally, while some guarians may have a\r\n        light preference as to what their favorite material may be, as reflections of who they are\r\n        bound to, most guarians feel no difference between one material and another and will happily\r\n        occupy whatever form you feel closest to.\r\n      </p>\r\n      <h2>Size Shifting</h2>\r\n      <p>\r\n        Just as a guarian may shift in make, they can also instantly shift size as well. Just like\r\n        the material shifting, the size shift takes place instantly when not looking and varies from\r\n        guarian to guarian (as well as those who they are bound to).Based on what’s known, while\r\n        some guarians have been seen enjoying a consistent size, others like to take advantage of\r\n        the shifting, taking on larger forms whenever they have the space to do so. The actual size\r\n        range that a guarian can shift to isn’t clearly known as some have demonstrated incredible\r\n        upper bounds.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nLore.displayName = \"Lore\";\r\nexport { Lore };\r\n","import React from \"react\";\r\nimport Placeholder from \"./Tabs/Placeholder\";\r\nimport { KnownGuarians } from \"./Tabs/KnownGuarians\";\r\nimport { Lore } from \"./Tabs/Lore/Lore\";\r\n\r\nexport interface RefSection {\r\n  title: string;\r\n  content: React.ReactNode;\r\n  route: string;\r\n  exact?: boolean;\r\n}\r\n\r\nconst refSections: RefSection[] = [\r\n  { title: \"Overview\", content: <Placeholder />, route: \"/guarians\", exact: true },\r\n  { title: \"Lore\", content: <Lore />, route: \"/guarians/lore\" },\r\n  { title: \"Known Guarians\", content: <KnownGuarians />, route: \"/guarians/list/:guarian?\" },\r\n  { title: \"A Guarian of Your Own\", content: <Placeholder />, route: \"/guarians/custom\" },\r\n];\r\n\r\nexport default refSections;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport refSections from \"./refSections\";\r\n\r\ninterface IProps {}\r\n\r\nconst GuarianRoutes: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <Switch>\r\n      {refSections.map((s) => (\r\n        <Route exact key={s.route} path={s.route}>\r\n          {s.content}\r\n        </Route>\r\n      ))}\r\n      <Redirect to={\"/guarians\"} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nGuarianRoutes.displayName = \"GuarianRoutes\";\r\nexport { GuarianRoutes };\r\n","import { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { generatePath, NavLink } from \"react-router-dom\";\r\nimport \"./guarianRef.css\";\r\nimport { GuarianRoutes } from \"./GuarianRoutes\";\r\nimport refSections, { RefSection } from \"./refSections\";\r\n\r\ninterface IProps {}\r\n\r\nexport const GuarianMenuRef: React.FC<IProps> = ({}) => {\r\n  const [isMenuVisible, setMenuVisible] = useState(false);\r\n\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    var listener = (e: MouseEvent) => {\r\n      if (menuRef.current && !menuRef.current.contains(e.target as Node)) {\r\n        setMenuVisible(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n\r\n    return () => document.removeEventListener(\"mousedown\", listener);\r\n  }, []);\r\n\r\n  function renderOption(s: RefSection, index: number) {\r\n    return (\r\n      <NavLink\r\n        exact={s.exact}\r\n        to={generatePath(s.route)}\r\n        className=\"option\"\r\n        activeClassName=\"selected\"\r\n        onClick={() => setMenuVisible(false)}\r\n      >\r\n        {s.title}\r\n      </NavLink>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"menu-opener menu-clickable\" onClick={(e) => setMenuVisible(true)}>\r\n        <FontAwesomeIcon icon={faBars} size=\"2x\" fixedWidth />\r\n      </div>\r\n      <div\r\n        ref={menuRef}\r\n        className=\"overlay-menu\"\r\n        style={isMenuVisible ? { width: 200, borderRight: \"3px solid #eee\" } : { width: 0 }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"menu-clickable\"\r\n            style={{ marginBottom: 20 }}\r\n            onClick={() => setMenuVisible(false)}\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} size=\"lg\" />\r\n          </div>\r\n        </div>\r\n        {refSections.map(renderOption)}\r\n      </div>\r\n      <div className=\"content\">\r\n        <GuarianRoutes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianMenuRef.displayName = \"GuarianMenuRef\";\r\nexport default GuarianMenuRef;\r\n","import React from \"react\";\r\nimport { generatePath, NavLink } from \"react-router-dom\";\r\nimport { GuarianRoutes } from \"./GuarianRoutes\";\r\nimport refSections from \"./refSections\";\r\n\r\ninterface IProps {}\r\n\r\nexport const GuarianTabRef: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"tab-wrapper\">\r\n        {refSections.map((s) => (\r\n          <NavLink\r\n            exact={s.exact}\r\n            className=\"tab\"\r\n            activeClassName=\"selected\"\r\n            to={generatePath(s.route)}\r\n          >\r\n            {s.title}\r\n          </NavLink>\r\n        ))}\r\n      </div>\r\n      <div className=\"content flat-top\">\r\n        <GuarianRoutes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianTabRef.displayName = \"GuarianTabRef\";\r\nexport default GuarianTabRef;\r\n","import React from \"react\";\r\nimport { NarrowScreen, WideScreen } from \"../../Components/ScreenDetector\";\r\nimport GuarianMenuRef from \"./GuarianMenuRef\";\r\nimport \"./guarianRef.css\";\r\nimport GuarianTabRef from \"./GuarianTabRef\";\r\n\r\ninterface IProps {}\r\n\r\nexport const GuarianRef: React.FC<IProps> = ({}) => {\r\n  return (\r\n    <div className=\"guarian-ref\">\r\n      <h1 className=\"title\">The Guarians</h1>\r\n      <WideScreen>\r\n        <GuarianTabRef />\r\n      </WideScreen>\r\n      <NarrowScreen>\r\n        <GuarianMenuRef />\r\n      </NarrowScreen>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuarianRef.displayName = \"GuarianRef\";\r\nexport default GuarianRef;\r\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport GuarianRef from \"./Pages/Guarians/GuarianRef\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <GuarianRef />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}